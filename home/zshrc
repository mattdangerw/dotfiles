ZSH_SCRIPT_DIR=$(dirname $(readlink -f ${HOME}/.zshrc))

# for oh-my-zsh
ZSH="$(antibody home)/https-COLON--SLASH--SLASH-github.com-SLASH-robbyrussell-SLASH-oh-my-zsh"
DISABLE_AUTO_UPDATE=true
DISABLE_CORRECTION="true"
COMPLETION_WAITING_DOTS="true"
DISABLE_UNTRACKED_FILES_DIRTY="true"

# zplug
source ~/.zplug/init.zsh

# use the main oh my zsh stuff?
zplug "robbyrussell/oh-my-zsh", use:"lib/*.zsh"
zplug "plugins/github", from:oh-my-zsh
zplug "plugins/z", from:oh-my-zsh

zplug "zsh-users/zsh-completions"
zplug "caarlos0/zsh-mkc"

# needs to be before pure theme
zplug "mafredri/zsh-async"
zplug "~/checkout/fzf-z", from:local

zplug "~/checkout/pure", from:local, use:pure.zsh, as:theme

if ! zplug check --verbose; then
    printf "Install? [y/N]: "
    if read -q; then
        echo; zplug install
    fi
fi

zplug load

# support 256 colors
TERM=xterm-256color

FZF_DEFAULT_OPTS='--height 40% --layout=reverse --prompt="? " --color=fg:-1,fg+:-1,bg:-1,bg+:-1,hl:13,hl+:13,prompt:4,pointer:4,spinner:4,marker:13,header:242,info:242,border:242'
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

FZFZ_SUBDIR_LIMIT=0
FZFZ_EXTRA_DIRS="~ ~/checkout"

autoload -U compinit && compinit

# Setup path properly over ssh
source $HOME/.profile

# resume downloads if dc'd
alias wget='wget -c'
alias chrome='google-chrome'
alias files='xdg-open .'
alias term='gnome-terminal'
alias gdbr='gdb -q -ex r'
alias tree='tree -C'
alias woman=man

# some more ls aliases
alias l='ls'
alias la='ls -A'
alias ll='ls -Alh'
alias lt='ls -Alhtr'

# easy zsh move
autoload -U zmv
alias pmv='noglob zmv -W'
alias pcp='noglob zmv -W -C'

alias sl='sl'

# sudo uses aliases
# alias sudo='sudo '

function say() {
    if which cowsay >/dev/null && which lolcat >/dev/null; then
        cowfile=`ls /usr/share/cowsay/cows | sort -R | tail -1`
        cowsay -f $cowfile "$@" | lolcat
        # cowsay -f head-in -e "><" "$@" | cowthink -n -f dragon-and-cow -e "OO" | cowthink -n -s -f bong
    else
        echo $@
    fi
}

alias quote='say `fortune`'
alias bored='while :; do quote && sleep 4; done'
alias lol='say lol'
alias yo='say yo-yo'
alias hey='say oh hai'
alias fart='say pffttbbttbt'

# don't type this training
alias npm='say NoOOoOO npm'
alias subl='say NoOOoOO subl'
alias atom='say NoOOoOO atom'

# apt crap
alias install='sudo apt install'
alias remove='sudo apt remove'
alias update='sudo apt update'
alias upgrade='sudo apt update && sudo apt dist-upgrade'
alias search='apt-cache search'

# more dots
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias .....='cd ../../../..'

alias size='command du -sh'
alias count='wc -l'

alias shutdown='quote && read && shutdown -h now'
alias reboot='shutdown -r now'
alias logout='gnome-session-quit'

alias zedit="${EDITOR:-vim} ~/.zshrc"
alias zbundle="antibody bundle < ~/.zsh_plugins.txt > ~/.zsh_plugins.sh"
alias zup='source ~/.zshrc'

alias which-package='dpkg-query -S'

function calc() {
    python -c "print $@"
}

# debian
alias dquilt="quilt --quiltrc=${HOME}/.quiltrc-dpkg"

function deb-extract() {
    mkdir -p $2
    dpkg-deb -x $1 $2
    dpkg-deb --control $1 $2/DEBIAN
}

function deb-rebuild() {
    dpkg -b $1 $2
}

alias c="command"

# pipe to grep
alias -g '@'="| command grep --color=auto"
alias dgrep="dpkg -l | command grep --color=auto"

# add to clipboard
alias clip="xclip -sel clip"

# ls after every cd
function chpwd() {
    emulate -LR zsh
    ls
}

if which hub &>/dev/null; then
  alias git=hub
fi

# Git mode! work in progress
function rm_git_mode()
{
    if git rev-parse --git-dir > /dev/null 2>&1; then
        local output
        output=`git rm $@ 2>&1`
        local ret="$?"
        if [ $ret -ne 128 ]; then
            echo $output
            return $ret
        fi
    fi
    command rm "$@"
}
function mv_git_mode()
{
    if git rev-parse --git-dir > /dev/null 2>&1; then
        local output
        output=`git mv $@ 2>&1`
        local ret="$?"
        if [ $ret -ne 128 ]; then
            echo $output
            return $ret
        fi
    fi
    command mv "$@"
}
function alias_git_mode()
{
    local aliases="$(git config --get-regexp '^alias.' | sed s/alias.// | awk '{print $1}')"
    local git_builtins="add apply blame branch checkout cherry cherry-pick clean \
        clone commit config describe diff fetch format-patch gc grep help init log merge \
        prune pull push rebase reflog remote reset revert show stash status tag"
    _git_mode_commands=(${(ps:\n:)${aliases}} ${(ps: :)${git_builtins}})
    if which hub >/dev/null; then
        local hub_builtins="create browse compare fork pull-request ci-status"
        _git_mode_commands+=(${(ps: :)${hub_builtins}})
    fi
    for word in $_git_mode_commands; do
        alias "$word"="git $word"
    done
    alias mv="mv_git_mode"
    alias rm="rm_git_mode"
}
function unalias_git_mode()
{
    for word in $_git_mode_commands; do
        unalias "$word"
    done
    unalias mv
    unalias rm
}
# toggle git mode or run a single command with git
function g()
{
    if [ "$#" -eq 0 ]; then
        if [ $GIT_MODE ]; then
            unset GIT_MODE
            unalias_git_mode
        else
            export GIT_MODE=true
            alias_git_mode
        fi
    else
        git $@
    fi
}
if [ $GIT_MODE ]; then
    alias_git_mode
fi

if [ -z $FIRST_INCLUDE ]; then
    export FIRST_INCLUDE=true
    g
fi
