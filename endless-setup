#!/bin/bash -ex
# Setup script to install everything needed, run jhbuild and get up and running

SCRIPT_DIR=$(dirname $(readlink -f $0))
ARCH=$(dpkg --print-architecture)

BUILD_MODULES=false
OPTIND=1
while getopts "b" opt; do
    case "$opt" in
    b)
        BUILD_MODULES=true
        ;;
    esac
done

# Grab sudo rights
sudo true

sudo apt-get update
# recommends would get eos-dev-config
sudo apt-get install -y eos-dev --no-install-recommends
# get the basic dependencies
sudo apt-get install -y python-pip python3-pip npm autotools-dev tree devhelp \
    dkms linux-headers-generic libtool-bin ruby

# pip install shit we don't have in debians
sudo pip3 install pep8
sudo pip install transifex-client

# npm install shit we don't have in debians
sudo npm install -g jshint
sudo npm install -g csslint

# gem install shit we don't have in debians
sudo gem install gist
sudo gem install lolcat

# build deps for most everything else
sudo apt-get build-dep -y eos-shell-content eos-shell eos-sdk \
    eos-app-store eos-social eos-file-manager eos-theme gtk+3.0 \
    libsoup2.4 eos-metrics xapian-glib eos-knowledge-db-build \
    eos-knowledge-lib yelp eos-metrics-instrumentation \
    mutter eos-app-manager eos-event-recorder-daemon
# app build dep don't work cause reasons
sudo apt-get install -y python-gi python-imaging python-scipy python-skimage \
    python-bs4 python-polib ruby-haml coffeescript


# oh-my-zsh
if [ ! -e $HOME/.oh-my-zsh ]; then
    git clone git://github.com/robbyrussell/oh-my-zsh.git $HOME/.oh-my-zsh
fi

# debian install stuff we dont have on obs
sudo dpkg -i $SCRIPT_DIR/debians/*_${ARCH}.deb
sudo apt-get install -f

$SCRIPT_DIR/link

sudo apt-get update
sudo apt-get install fortunes fortunes-mod cowsay xclip dos2unix

# install jhbuild
if [ ! -e $HOME/checkout/jhbuild ]; then
   git clone git://git.gnome.org/jhbuild $HOME/checkout/jhbuild
fi
pushd $HOME/checkout/jhbuild
    ./autogen.sh
    make
    make install
popd

# get our PATH correctly set up
. $HOME/.profile

if $BUILD_MODULES; then
    jhbuild --no-interact build || true
fi

# gsettings
gsettings set org.gnome.shell icon-grid-layout "$(cat ${SCRIPT_DIR}/icon-layout)"
gsettings set org.gnome.desktop.background picture-uri "file://${SCRIPT_DIR}/background.jpg"
# crappy batter monitoring on my laptop
gsettings set org.gnome.settings-daemon.plugins.power critical-battery-action 'nothing'
gsettings set org.gnome.settings-daemon.peripherals.touchpad natural-scroll true
gsettings set org.gnome.desktop.input-sources xkb-options "['ctrl:nocaps']"
gsettings set org.gnome.desktop.wm.keybindings panel-main-menu "['<Super>space', '<Alt>F1']"
gsettings set org.gnome.desktop.wm.keybindings switch-input-source "['<Super>i']"
gsettings set org.gtk.Settings.Debug enable-inspector-keybinding true

gsettings set org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/launch-terminal/ name 'Launch Terminal'
gsettings set org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/launch-terminal/ command 'gnome-terminal'
gsettings set org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/launch-terminal/ binding '<Primary><Alt>t'
SCREEN_SCALE="xrandr --output $(xrandr | grep primary | awk '{print $1;}') --scale-from 720x480"
SCREEN_RESTORE="xrandr --output $(xrandr | grep primary | awk '{print $1;}') --transform none"
TEXT_SCALE="gsettings set org.gnome.desktop.interface text-scaling-factor 1.25"
TEXT_RESTORE="gsettings set org.gnome.desktop.interface text-scaling-factor 1.0"
gsettings set org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/small-screen/ name 'Small Screen'
gsettings set org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/small-screen/ command "bash -c \"$SCREEN_SCALE && $TEXT_SCALE\""
gsettings set org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/small-screen/ binding '<Super>comma'
gsettings set org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/large-screen/ name 'Large Screen'
gsettings set org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/large-screen/ command "bash -c \"$SCREEN_RESTORE && $TEXT_RESTORE\""
gsettings set org.gnome.settings-daemon.plugins.media-keys.custom-keybinding:/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/large-screen/ binding '<Super>period'

gsettings set org.gnome.settings-daemon.plugins.media-keys custom-keybindings "['/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/launch-terminal/', '/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/small-screen/', '/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/large-screen/']"

if which subl; then
    # generate subl conf files
    subl -b
    sleep 1
    pkill subl

    # add sublime package manager
    if [ ! -e $HOME/.config/sublime-text-3/Installed\ Packages/Package\ Control.sublime-package ]; then
        pushd $HOME/.config/sublime-text-3/Installed\ Packages
            wget https://sublime.wbond.net/Package%20Control.sublime-package
        popd
    fi

    # make a sublime project for everything in ~/checkout
    update-sublime-projects
fi

zsh -c "source $HOME/.zshrc && say 'DONE! When sublime next starts up, give it
some time to install you packages. When you are ready, press enter to switch to
zsh (needs password) and reboot.'"
read
bash -c "chsh -s $(which zsh)"
sudo reboot
